services:
  # PostgreSQL Database (FREE - local)
  postgres:
    image: postgres:15-alpine
    container_name: up2d8-postgres
    environment:
      POSTGRES_DB: up2d8
      POSTGRES_USER: up2d8
      POSTGRES_PASSWORD: up2d8_dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U up2d8"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - up2d8

  # Redis Cache (FREE - local)
  redis:
    image: redis:7-alpine
    container_name: up2d8-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - up2d8

  # FastAPI Backend Service
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: up2d8-api
    command: uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app
      - ./data:/app/data  # For ChromaDB persistence
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://up2d8:up2d8_dev_password@postgres:5432/up2d8
      - REDIS_URL=redis://redis:6379/0
      - LLM_PROVIDER=ollama
      - OLLAMA_BASE_URL=http://host.docker.internal:11434  # Connect to host Ollama
      - EMBEDDING_PROVIDER=sentence-transformers
      - VECTOR_DB_PROVIDER=chroma
      - CHROMA_PATH=/app/data/chroma
      - EMAIL_PROVIDER=console
      - ENVIRONMENT=development
      - DEBUG=true
      - JWT_SECRET_KEY=dev_secret_key_change_in_production_12345678901234567890
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=15
      - REFRESH_TOKEN_EXPIRE_DAYS=7
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - up2d8

  # Celery Worker (optional - uncomment when needed)
  # worker:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   container_name: up2d8-worker
  #   command: celery -A workers.celery_app worker --loglevel=info
  #   volumes:
  #     - ./backend:/app
  #     - ./data:/app/data
  #   environment:
  #     - DATABASE_URL=postgresql://up2d8:up2d8_dev_password@postgres:5432/up2d8
  #     - REDIS_URL=redis://redis:6379/0
  #     - LLM_PROVIDER=ollama
  #     - OLLAMA_BASE_URL=http://host.docker.internal:11434
  #     - EMBEDDING_PROVIDER=sentence-transformers
  #     - VECTOR_DB_PROVIDER=chroma
  #     - CHROMA_PATH=/app/data/chroma
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   networks:
  #     - up2d8

  # Celery Beat (scheduled tasks - optional)
  # beat:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   container_name: up2d8-beat
  #   command: celery -A workers.celery_app beat --loglevel=info
  #   volumes:
  #     - ./backend:/app
  #   environment:
  #     - DATABASE_URL=postgresql://up2d8:up2d8_dev_password@postgres:5432/up2d8
  #     - REDIS_URL=redis://redis:6379/0
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   networks:
  #     - up2d8

  # pgAdmin (optional - database management UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: up2d8-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@up2d8.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - up2d8
    profiles:
      - tools  # Only start with: docker-compose --profile tools up

  # Redis Commander (optional - Redis management UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: up2d8-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - up2d8
    profiles:
      - tools  # Only start with: docker-compose --profile tools up

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  up2d8:
    driver: bridge

# Usage:
#
# Start all services (DB, Redis, FastAPI):
#   docker-compose up -d
#
# Start with management tools:
#   docker-compose --profile tools up -d
#
# View logs:
#   docker-compose logs -f api
#   docker-compose logs -f postgres
#
# Stop everything:
#   docker-compose down
#
# Reset database (CAUTION - deletes data):
#   docker-compose down -v
#   docker-compose up -d
#
# Access services:
#   FastAPI: http://localhost:8000
#   API Docs: http://localhost:8000/docs
#   PostgreSQL: localhost:5432
#   Redis: localhost:6379
#   pgAdmin: http://localhost:5050 (with --profile tools)
#   Redis Commander: http://localhost:8081 (with --profile tools)
