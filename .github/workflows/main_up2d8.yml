# .github/workflows/deploy_backend.yml
name: Build and deploy FastAPI backend to Azure App Service - up2d8

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: up2d8
  PYTHON_VERSION: '3.12'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create deployment package
        run: |
          cd backend
          # Create a clean directory for deployment
          mkdir -p ../deploy
          # Copy application files
          cp -r api ../deploy/
          cp requirements.txt ../deploy/
          cp startup.txt ../deploy/
          cp runtime.txt ../deploy/
          # Create zip file
          cd ../deploy
          zip -r ../backend-deploy.zip .
          cd ..
          ls -lh backend-deploy.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_55E9F9E363FD404D9D429EBC3DC7291A }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_F012F5B2F6F94CB0A6330C61E57AEFC2 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_8AF832FC630D41608A87BC78F441C334 }}

      - name: Deploy to Azure Web App
        run: |
          az webapp deployment source config-zip \
            --resource-group $(az webapp list --query "[?name=='${{ env.AZURE_WEBAPP_NAME }}'].resourceGroup" -o tsv) \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --src backend-deploy.zip \
            --timeout 600

      - name: Restart Azure Web App
        run: |
          az webapp restart \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group $(az webapp list --query "[?name=='${{ env.AZURE_WEBAPP_NAME }}'].resourceGroup" -o tsv)
