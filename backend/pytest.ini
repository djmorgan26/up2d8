[pytest]
# Pytest configuration for UP2D8

# Test discovery
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Minimum Python version
minversion = 3.11

# Add current directory to Python path
pythonpath = .

# Output options
addopts =
    # Verbose output
    -v
    # Show local variables in tracebacks
    -l
    # Show summary of all test outcomes
    -ra
    # Strict markers (fail on unregistered markers)
    --strict-markers
    # Warnings
    -W error::Warning
    -W ignore::DeprecationWarning
    # Coverage (uncomment to enable by default)
    # --cov=api
    # --cov-report=html
    # --cov-report=term-missing

# Markers for test categorization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (require DB, Redis)
    e2e: End-to-end tests (full workflows)
    slow: Slow tests (> 1 second)
    requires_ollama: Tests that require Ollama to be running
    requires_db: Tests that require database
    requires_redis: Tests that require Redis

# Async support
asyncio_mode = auto

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage options (when enabled)
[coverage:run]
source = api
omit =
    */tests/*
    */migrations/*
    */__pycache__/*
    */venv/*

[coverage:report]
precision = 2
show_missing = true
skip_covered = false

exclude_lines =
    # Standard pragma
    pragma: no cover
    # Debug code
    def __repr__
    # Abstract methods
    @abstractmethod
    # Type checking
    if TYPE_CHECKING:
    # Defensive programming
    raise AssertionError
    raise NotImplementedError
