# UP2D8 Environment Configuration
# Copy this file to .env and configure for your environment

# =============================================================================
# QUICK START (FREE DEVELOPMENT)
# =============================================================================
# 1. Copy this file: cp .env.example .env
# 2. Install Ollama: brew install ollama (Mac) or see ollama.com
# 3. Start Ollama: ollama serve
# 4. Pull model: ollama pull llama3.2:3b
# 5. Start services: docker-compose up -d
# 6. You're ready! No API keys needed for development.
# =============================================================================

# Environment
ENVIRONMENT=development  # development, staging, production
DEBUG=true
LOG_LEVEL=INFO

# Database (local PostgreSQL via Docker)
DATABASE_URL=postgresql://up2d8:up2d8_dev_password@localhost:5432/up2d8

# Redis (local via Docker)
REDIS_URL=redis://localhost:6379/0

# =============================================================================
# LLM PROVIDER CONFIGURATION
# =============================================================================
# Options: ollama (local/free), groq (free tier), anthropic (paid), openai (paid)
LLM_PROVIDER=ollama

# --- Ollama (LOCAL - COMPLETELY FREE) ---
OLLAMA_BASE_URL=http://localhost:11434
OLLAMA_MODEL=llama3.2:3b  # Fast, good quality. Or: mistral:7b, phi3:mini

# --- Groq (FREE TIER - Sign up at console.groq.com) ---
# GROQ_API_KEY=gsk_xxxxx
# GROQ_MODEL=llama-3.1-8b-instant  # Very fast

# --- Anthropic (PAID - For production) ---
# ANTHROPIC_API_KEY=sk-ant-xxxxx
# LLM_MODEL=claude-sonnet-4.5

# --- OpenAI (PAID - For production) ---
# OPENAI_API_KEY=sk-xxxxx
# LLM_MODEL=gpt-4o-mini

# =============================================================================
# EMBEDDINGS CONFIGURATION
# =============================================================================
# Options: sentence-transformers (local/free), openai (paid)
EMBEDDING_PROVIDER=sentence-transformers
EMBEDDING_MODEL=all-MiniLM-L6-v2  # Fast, 384 dims. Or: all-mpnet-base-v2 (768 dims)

# --- OpenAI Embeddings (PAID - For production) ---
# EMBEDDING_PROVIDER=openai
# OPENAI_API_KEY=sk-xxxxx
# EMBEDDING_MODEL=text-embedding-3-small

# =============================================================================
# VECTOR DATABASE CONFIGURATION
# =============================================================================
# Options: chroma (local/free), pgvector (postgres/free), pinecone (paid)
VECTOR_DB_PROVIDER=chroma
CHROMA_PATH=./data/chroma  # Local storage path

# --- pgvector (FREE - uses existing PostgreSQL) ---
# VECTOR_DB_PROVIDER=pgvector
# (Uses DATABASE_URL above)

# --- Pinecone (PAID - For production scale) ---
# VECTOR_DB_PROVIDER=pinecone
# PINECONE_API_KEY=xxxxx
# PINECONE_ENVIRONMENT=us-east1-gcp
# PINECONE_INDEX_NAME=up2d8-prod

# =============================================================================
# EMAIL SERVICE CONFIGURATION
# =============================================================================
# Options: console (logs only), mailgun (free tier), brevo (free tier), ses (paid)
EMAIL_PROVIDER=console  # Just logs to terminal in development
EMAIL_FROM=dev@up2d8.local

# --- Mailgun (FREE TIER: 5,000 emails/month - mailgun.com) ---
# EMAIL_PROVIDER=mailgun
# MAILGUN_API_KEY=xxxxx
# MAILGUN_DOMAIN=mg.yourdomain.com

# --- Brevo/Sendinblue (FREE TIER: 300 emails/day - brevo.com) ---
# EMAIL_PROVIDER=brevo
# BREVO_API_KEY=xxxxx

# --- MailerSend (FREE TIER: 12,000 emails/month - mailersend.com) ---
# EMAIL_PROVIDER=mailersend
# MAILERSEND_API_KEY=xxxxx

# --- AWS SES (PAID: $0.10/1,000 emails - For production) ---
# EMAIL_PROVIDER=ses
# AWS_ACCESS_KEY_ID=xxxxx
# AWS_SECRET_ACCESS_KEY=xxxxx
# AWS_REGION=us-east-1
# SES_SENDER_EMAIL=noreply@up2d8.ai

# =============================================================================
# JWT AUTHENTICATION
# =============================================================================
# Generate secure key with: openssl rand -base64 32
JWT_SECRET_KEY=dev_secret_key_change_in_production_12345678901234567890
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=15
REFRESH_TOKEN_EXPIRE_DAYS=7

# =============================================================================
# CORS CONFIGURATION
# =============================================================================
CORS_ORIGINS=http://localhost:3000,http://localhost:3001,http://localhost:5173

# =============================================================================
# FEATURE FLAGS
# =============================================================================
ENABLE_CHAT=true
ENABLE_WEB_SEARCH=false  # Set to true when you have web search API
ENABLE_REAL_TIME_SCRAPING=true
ENABLE_EMAIL_DIGESTS=true

# =============================================================================
# RATE LIMITING
# =============================================================================
RATE_LIMIT_ENABLED=false  # Disable in development for easier testing

# Free tier limits
FREE_TIER_CHAT_MESSAGES_PER_DAY=10
FREE_TIER_API_REQUESTS_PER_HOUR=100

# Pro tier limits
PRO_TIER_CHAT_MESSAGES_PER_DAY=500
PRO_TIER_API_REQUESTS_PER_HOUR=1000

# =============================================================================
# COST OPTIMIZATION SETTINGS
# =============================================================================
USE_CACHE_AGGRESSIVELY=true  # Cache LLM responses to save costs
CACHE_TTL_SECONDS=3600  # 1 hour

MAX_ARTICLES_PER_SCRAPE=10  # Limit in dev to reduce data volume
SUMMARIZATION_BATCH_SIZE=5  # Process articles in small batches

# =============================================================================
# MONITORING & LOGGING (Optional)
# =============================================================================
# Sentry (Error tracking - sentry.io)
SENTRY_DSN=
SENTRY_ENVIRONMENT=development
SENTRY_TRACES_SAMPLE_RATE=0.1

# =============================================================================
# EXTERNAL SERVICES (Optional - for advanced features)
# =============================================================================
# Stripe (Payment processing - for Pro tier)
# STRIPE_API_KEY=sk_test_xxxxx
# STRIPE_WEBHOOK_SECRET=whsec_xxxxx

# Brave Search API (for web search feature)
# BRAVE_SEARCH_API_KEY=xxxxx

# GitHub API (for repository tracking)
# GITHUB_TOKEN=ghp_xxxxx

# =============================================================================
# NOTES
# =============================================================================
# DEVELOPMENT SETUP (FREE):
#   - Use Ollama for LLM
#   - Use sentence-transformers for embeddings
#   - Use ChromaDB for vector storage
#   - Use console for email (logs only)
#   Total cost: $0/month
#
# PRODUCTION SETUP (PAID):
#   - Use Anthropic Claude for LLM quality
#   - Use OpenAI for embeddings
#   - Use Pinecone for vector DB scale
#   - Use AWS SES for email deliverability
#   Total cost: ~$50-100/month for 100 users
#
# See DEVELOPMENT_SETUP.md for detailed instructions
# =============================================================================
